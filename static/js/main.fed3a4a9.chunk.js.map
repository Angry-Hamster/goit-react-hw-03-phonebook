{"version":3,"sources":["components/Contacts.js","components/Form.js","components/Filter.js","App.js","index.js","components/style.module.css"],"names":["Contact","handlefilter","prop","filter","contacts","w","name","toLowerCase","includes","handleDelete","e","window","confirm","target","parentNode","firstChild","textContent","props","deleteContact","id","className","css","contactList","this","users","map","item","number","onClick","Component","defaultProps","contact","Form","state","handleChange","value","setState","handleSubmit","preventDefault","uuidv4","length","addNewContact","alert","claerForm","form","onSubmit","htmlFor","type","placeholder","onChange","required","Filter","App","user","prev","getFilter","addEventListener","localStorage","clear","setItem","JSON","stringify","getItem","parse","console","log","Contacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fed3a4a9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nimport css from \"./style.module.css\";\r\n\r\nclass Contact extends Component {\r\n  // ToDo function\r\n  handlefilter = (prop) => {\r\n    const { filter, contacts } = prop;\r\n\r\n    if (filter == \"\") {\r\n      return contacts;\r\n    } else {\r\n      return contacts.filter((w) => w.name.toLowerCase().includes(filter.toLowerCase()));\r\n    }\r\n  };\r\n\r\n  handleDelete = (e) => {\r\n    if (window.confirm(`Delete ${e.target.parentNode.firstChild.textContent}?`)) {\r\n      this.props.deleteContact(e.target.parentNode.id);\r\n    }\r\n  };\r\n\r\n  // ToDo DOM tree\r\n  render() {\r\n    return (\r\n      <ul className={css.contactList}>\r\n        {this.handlefilter(this.props.users).map((item) => {\r\n          return (\r\n            <li key={item.id} id={item.id}>\r\n              <span>\r\n                {item.name}: {item.number}\r\n              </span>\r\n\r\n              <button onClick={this.handleDelete}> Delete </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\n// ToDo props defoult & props type\r\nContact.defaultProps = {\r\n  contact: [{ id: \"id-0\", name: \"your name\", number: \"your number\" }],\r\n  filter: '',\r\n};\r\n\r\nContact.propTypes  = {\r\n  users: PropTypes.object,\r\n};\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport css from \"./style.module.css\";\r\n\r\nclass Form extends Component {\r\n  // ToDo contact\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  // ToDo methods\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    const contact = { name: name, number: number, id: uuidv4() };\r\n\r\n    this.props.users.filter((w) => w.name.toLowerCase() == name.toLowerCase()).length == 0\r\n      ? this.props.addNewContact(contact)\r\n      : alert(`${name} is alredy in contacs`);\r\n\r\n    this.claerForm();\r\n  };\r\n\r\n  claerForm = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  // ToDo DOM tree\r\n  render() {\r\n    return (\r\n      <form className={css.form} onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          id=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"number\">Phone</label>\r\n        <input\r\n          id=\"number\"\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          placeholder=\"Enter your phone\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// ToDo props defoult & props type\r\nForm.defaultProps = {\r\n  users: [{ id: \"id-0\", name: \"your name\", number: \"your number\" }],\r\n};\r\n\r\nForm.propTypes = {\r\n  users: PropTypes.array,\r\n};\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\n\r\nimport css from './style.module.css'\r\n\r\nclass Filter extends Component {\r\n  // ToDo methods\r\n  handleChange = (e) => {\r\n    const { value } = e.target;\r\n\r\n    this.props.filter( value );\r\n  };\r\n\r\n  // ToDo DOM tree\r\n  render() {\r\n    return (\r\n      <div className={css.filter}>\r\n        <label htmlFor=\"filter\">Find contacts by name</label>\r\n        <input name=\"filter\" id=\"filter\" onChange={this.handleChange} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport Contacts from \"./components/Contacts\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n  // ToDo contacts\n  state = {\n    contacts: [\n      // ! Contacts\n    ],\n    filter: \"\",\n  };\n\n  // ToDo methods\n  addNewContact = (user) => {\n    this.setState((prev) => ({ contacts: [...prev.contacts, user] }));\n  };\n\n  getFilter = (filter) => {\n    this.setState({ filter: filter });\n  };\n\n  deleteContact = (id) => {\n    const { contacts } = this.state;\n    this.setState({ contacts: contacts.filter((w) => w.id != id) });\n  };\n\n  // ToDo livecicle\n\n  componentDidMount() {\n    // ? load JSON to localStorege\n    window.addEventListener(\"beforeunload\", () => {\n      localStorage.clear();\n      this.state.contacts.length && localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    });\n\n    // ? unload JSON of localStorege\n    window.addEventListener(\"load\", () => {\n      if (localStorage.getItem(\"contacts\") != null) {\n        this.setState({ contacts: JSON.parse(localStorage.getItem(\"contacts\")) });\n        console.log(\n          \"%c[Sistem call]%c[LocalStorage get key is successful]\",\n          \"color: purple; font-size: 15px;\",\n          \"color: green; font-size: 15px;\"\n        );\n      } else {\n        console.log(\n          \"%c[Sistem call]%c[LocalStorage is null]\",\n          \"color: purple; font-size: 15px;\",\n          \"color: red; font-size: 15px;\"\n        );\n      }\n    });\n  }\n\n  // ToDo DOM tree\n  render() {\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Form addNewContact={this.addNewContact} users={this.state.contacts} />\n\n        <h2>Contacts</h2>\n        <Filter filter={this.getFilter} />\n        <Contacts users={this.state} deleteContact={this.deleteContact} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__wCuy9\",\"filter\":\"style_filter__ddY2F\",\"contactList\":\"style_contactList__1hkpI\"};"],"sourceRoot":""}